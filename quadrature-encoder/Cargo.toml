[package]
name = "quadrature-encoder"
description = "Hardware-level implementations of drivers for incremental encoders with support for full-, half- an quad-stepping."
keywords = [
    "quadrature-encoder",
    "incremental-encoder",
    "rotary-encoder",
    "linear-encoder",
]
categories = ["embedded", "no-std"]

repository = { workspace = true }
documentation = { workspace = true }
homepage = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }
version = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
num-traits = { workspace = true }
quadrature-decoder = { version = "0.1.1", path = "../quadrature-decoder", default-features = false }
embedded-hal-compat = { version = "0.13.0" }
embedded-hal-async = { version = "1.0", optional = true }
futures = { version = "0.3.31", default-features = false, optional = true }
embassy-futures = { version = "0.1.1", optional = true }

[dev-dependencies]
embassy-executor = { version = "0.7.0", features = ["task-arena-size-32768", "arch-std", "executor-thread", "log"] }
embassy-time = { version = "0.4.0", features = ["log","std"] }
log = "0.4.25"
env_logger = "0.11.6"
static_cell = "2.1.0"

[dev-dependencies.embedded-hal-mock]
git = "https://github.com/leighleighleigh/embedded-hal-mock"
branch = "async-wait-forever"
features = ["eh0","eh1","embedded-hal-async"]

[features]
default = ["async"]
async = [
    "dep:embedded-hal-async",
    "dep:futures",
    "dep:embassy-futures",
] # provides an async poll() implementation

[[example]]
name = "rotary"

[[example]]
name = "linear"

[[example]]
name = "rotary_eh0"

[[example]]
name = "linear_eh0"

[[example]]
name = "rotary_async"
required-features = ["async"]

[[example]]
name = "linear_async"
required-features = ["async"]

[[example]]
name = "embassy_async"
required-features = ["async"]
